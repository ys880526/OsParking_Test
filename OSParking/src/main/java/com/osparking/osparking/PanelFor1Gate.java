/* 
 * Copyright (C) 2015 Open Source Parking Inc.(www.osparking.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.osparking.osparking;

import static com.osparking.osparking.ControlGUI.show100percentSizeImageOfGate;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import com.osparking.global.names.CarAdmission;
import static com.osparking.global.names.DB_Access.PIC_HEIGHT;
import static com.osparking.global.names.DB_Access.PIC_WIDTH;
import com.osparking.global.names.GatePanel;
import static com.osparking.global.Globals.*;

/**
 *
 * @author Open Source Parking Inc.
 */
public class PanelFor1Gate extends GatePanel {
    final DefaultListModel model_1 = new DefaultListModel();    
    JList entryList[] = new JList[3];
    DefaultListModel models[] = new DefaultListModel[3];
    //BufferedImage noPictureImg[] = new BufferedImage[2];
    
    /**
     * Creates new form PanelFor1Gate
     */
    public PanelFor1Gate() {
        initComponents();
        CarPicLabels[1] = CarPicLabel1;  
        entryList[1] = List_Gate1;
        models[1] = model_1;                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Gate1 = new javax.swing.JPanel();
        CarPicLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        ScrollPane_Gate1 = new javax.swing.JScrollPane();
        List_Gate1 = new javax.swing.JList();
        PanelRestArea = new javax.swing.JPanel();
        RestAreaPicLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        Panel_Gate1.setBackground(MainBackground);
        Panel_Gate1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gate 1 Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dotum", 1, 14))); // NOI18N
        Panel_Gate1.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
        Panel_Gate1.setName("Panel_Gate1"); // NOI18N
        Panel_Gate1.setPreferredSize(new java.awt.Dimension(343, 450));
        Panel_Gate1.setLayout(new javax.swing.BoxLayout(Panel_Gate1, javax.swing.BoxLayout.Y_AXIS));

        CarPicLabel1.setBackground(MainBackground);
        CarPicLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CarPicLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        CarPicLabel1.setAlignmentX(0.5F);
        CarPicLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CarPicLabel1.setDoubleBuffered(true);
        CarPicLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CarPicLabel1.setIconTextGap(0);
        CarPicLabel1.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
        CarPicLabel1.setMinimumSize(new java.awt.Dimension(100, 100));
        CarPicLabel1.setName(""); // NOI18N
        CarPicLabel1.setOpaque(true);
        CarPicLabel1.setPreferredSize(new java.awt.Dimension(303, 200));
        CarPicLabel1.setVerifyInputWhenFocusTarget(false);
        CarPicLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        CarPicLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CarPicLabel1MouseClicked(evt);
            }
        });
        Panel_Gate1.add(CarPicLabel1);
        Panel_Gate1.add(filler1);

        ScrollPane_Gate1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recent Car Arrivals", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Dotum", 1, 13))); // NOI18N
        ScrollPane_Gate1.setPreferredSize(new java.awt.Dimension(302, 155));

        List_Gate1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        List_Gate1.setFont(new java.awt.Font("Dotum", 1, 12)); // NOI18N
        List_Gate1.setModel((DefaultListModel<CarAdmission>)admissionListModel[1]);
        List_Gate1.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
        List_Gate1.setMinimumSize(new java.awt.Dimension(45, 240));
        List_Gate1.setName(""); // NOI18N
        List_Gate1.setPreferredSize(new java.awt.Dimension(303, 380));
        ScrollPane_Gate1.setViewportView(List_Gate1);

        Panel_Gate1.add(ScrollPane_Gate1);

        add(Panel_Gate1, java.awt.BorderLayout.WEST);

        PanelRestArea.setBackground(MainBackground);
        PanelRestArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 1, 1));
        PanelRestArea.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
        PanelRestArea.setLayout(new javax.swing.BoxLayout(PanelRestArea, javax.swing.BoxLayout.Y_AXIS));

        RestAreaPicLabel.setBackground(new java.awt.Color(255, 153, 153));
        RestAreaPicLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RestAreaPicLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        RestAreaPicLabel.setMaximumSize(new Dimension(Short.MAX_VALUE, Short.MAX_VALUE));
        RestAreaPicLabel.setName(""); // NOI18N
        RestAreaPicLabel.setPreferredSize(new java.awt.Dimension(200, 500));
        RestAreaPicLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        PanelRestArea.add(RestAreaPicLabel);

        /*

        add(PanelRestArea, java.awt.BorderLayout.CENTER);
        */
    }// </editor-fold>//GEN-END:initComponents

    private void CarPicLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CarPicLabel1MouseClicked
        show100percentSizeImageOfGate(1, getNoPictureImg());
    }//GEN-LAST:event_CarPicLabel1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CarPicLabel1;
    public javax.swing.JList List_Gate1;
    private javax.swing.JPanel PanelRestArea;
    private javax.swing.JPanel Panel_Gate1;
    private javax.swing.JLabel RestAreaPicLabel;
    private javax.swing.JScrollPane ScrollPane_Gate1;
    private javax.swing.Box.Filler filler1;
    // End of variables declaration//GEN-END:variables

    @Override
    public JLabel getPictureLabel(int gateNo) {
        return CarPicLabel1;        
    }

    @Override
    public void resizeComponents(Dimension gatesPanelSize) {

        setPreferredSize(gatesPanelSize);
        setSize(gatesPanelSize);
        revalidate();          
        
        int picWidthNew = 0, picHeightNew = 0;

        // Calculate Picture Frame Initial Size
        if (gatesPanelSize.width >= PIC_WIDTH + 10) {
            picWidthNew = PIC_WIDTH;
        } else {
            picWidthNew = gatesPanelSize.width - 10;
        } 

        picHeightNew = picWidthNew * PIC_HEIGHT / PIC_WIDTH;

        // when car entry list box height isn't enough, reduce picture height and then width
        // Calculate Picture Frame Size
        if (gatesPanelSize.height - picHeightNew - 10 < LIST_HEIGHT_MIN) {
            picHeightNew = gatesPanelSize.height - LIST_HEIGHT_MIN - 10;
            picWidthNew =  picHeightNew * PIC_WIDTH / PIC_HEIGHT;
        } 

        this.Panel_Gate1.setPreferredSize(
                new Dimension(picWidthNew, gatesPanelSize.height));
        this.Panel_Gate1.revalidate();

        setComponentSize(CarPicLabels[1], new Dimension(picWidthNew, picHeightNew));

        // <editor-fold defaultstate="collapsed" desc="-- stretch image for each window resizing">
        if (originalImgWidth[1] > 0)
        {
            //originalImg = ImageIO.read(new File(getDisplayedImagePath(1)));
            ImageIcon iIcon = createStretchedIcon(CarPicLabels[1].getPreferredSize(), 
                    getNoPictureImg(), false); // after components resized
            CarPicLabels[1].setIcon(iIcon);
        }
        CarPicLabels[1].revalidate();
        revalidate();
        // </editor-fold>

        int width = gatesPanelSize.width - picWidthNew;
        if (width > 20)
        {   // PanelRestArea
            add(PanelRestArea,  java.awt.BorderLayout.CENTER);
            try {
                RestAreaPicLabel.setPreferredSize(new Dimension(width, this.getSize().height));
                RestAreaPicLabel.revalidate();

                BufferedImage spaceImage;
                spaceImage = ImageIO.read(getClass().getResourceAsStream(restAreaImage));
                
                RestAreaPicLabel.setIcon(
                        createStretchedIcon(RestAreaPicLabel.getPreferredSize(), spaceImage, true));
                RestAreaPicLabel.revalidate();
            } catch (IOException e) {
                logParkingException(Level.SEVERE, e, "(Car Arrival Event Handler)");
            }
        }  
        else
        {
            remove(PanelRestArea);
        }
    }

    @Override
    public void displaySizes() {
        StringBuffer sb = new StringBuffer();
        
        sb.append("Whole");         
        sb.append(System.lineSeparator());
        sb.append("Pan = ");        
        sb.append(getSizeString(this));
        sb.append(System.lineSeparator());
        sb.append(System.lineSeparator());
        
        sb.append("Gate1");         
        sb.append(System.lineSeparator());
        sb.append("Pan = ");        
        sb.append(getSizeString(Panel_Gate1));
        sb.append(System.lineSeparator());
        sb.append("PIC = ");        
        sb.append(getSizeString(CarPicLabels[1]));
        sb.append(System.lineSeparator());
        sb.append("ScL = ");        
        sb.append(getSizeString(ScrollPane_Gate1));
        sb.append(System.lineSeparator());
        sb.append("LsT = ");        
        sb.append(getSizeString(List_Gate1));
        sb.append(System.lineSeparator());
        sb.append(System.lineSeparator());

        sb.append("Margin");         
        sb.append(System.lineSeparator());
        sb.append("Pan = ");        
        sb.append(getSizeString(PanelRestArea ));
        sb.append(System.lineSeparator());
        sb.append(System.lineSeparator());        
        sb.append("PIC = ");        
        sb.append(getSizeString(RestAreaPicLabel));
        sb.append(System.lineSeparator());
        sb.append(System.lineSeparator());        
                
        JOptionPane.showMessageDialog(null,
            sb.toString(), "InfoBox: CarPicLabel", JOptionPane.INFORMATION_MESSAGE);              
        
    }

    @Override
    public JList getEntryList(int gateNo) {
        return entryList[gateNo];
    }
    
    @Override
    public DefaultListModel getDefaultListModel(int gateNo) {
        return models[gateNo];
    }    

    @Override
    public JPanel getPanel_Gate(int gateNo) {
        return Panel_Gate1;
    }
}
