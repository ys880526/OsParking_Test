/* 
 * Copyright (C) 2015 Open Source Parking Inc.(www.osparking.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.osparking.osparking;

import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import static com.osparking.global.names.DB_Access.readEBoardSettings;
import com.osparking.global.Globals;
import static com.osparking.global.Globals.*;
import com.osparking.global.names.ConvComboBoxItem;
import com.osparking.global.names.JDBCMySQL;
import com.osparking.global.names.OSP_enums;
import static com.osparking.global.names.OSP_enums.DeviceType.E_Board;
import com.osparking.global.names.OSP_enums.EBD_Colors;
import com.osparking.global.names.OSP_enums.EBD_ContentType;
import com.osparking.global.names.OSP_enums.EBD_DisplayUsage;
import static com.osparking.global.names.OSP_enums.EBD_DisplayUsage.*;
import com.osparking.global.names.OSP_enums.EBD_Fonts;
import com.osparking.global.names.OSP_enums.EBD_Effects;
import static com.osparking.osparking.device.EBoardManager.sendEBoardDefaultSetting;
import static com.osparking.global.names.DB_Access.gateCount;
import com.osparking.global.names.OSP_enums.OpLogLevel;

/**
 *
 * @author YongSeok
 */
public class Settings_EBoard extends javax.swing.JFrame {
    public static ControlGUI mainForm = null;
    private HashMap<String,Component> componentMap;
    private EBD_DisplayUsage currentTab = DEFAULT_TOP_ROW, previousTab = DEFAULT_TOP_ROW;
    Settings_System parent = null;
    /**
     * Creates new form TestDisplay
     */
    public Settings_EBoard(ControlGUI mainForm, Settings_System parent) {
        initComponents();
        this.mainForm = mainForm;
        this.parent = parent;
        setResizable(false);
        
        makeComponentMap();
        
        addContentTypeItems();
        addDisplayEffectItems();
        addTextColorItems();
        addTextFontItems();
        
        selectSpecificTab(currentTab);
        
        ChangeListener changeListener = new ChangeListener() {
            public void stateChanged(ChangeEvent changeEvent) {
                previousTab = currentTab;
                int index =  (eboardTabbedPanel.getSelectedIndex() * 2) 
                    + ((JTabbedPane) eboardTabbedPanel.getSelectedComponent()).getSelectedIndex();
                currentTab = EBD_DisplayUsage.values()[index];
                selectSpecificTab(currentTab);
                showDialog(previousTab);
            }
        };
        eboardTabbedPanel.addChangeListener(changeListener);
        eBoardTabPane1.addChangeListener(changeListener);
        eBoardTabPane2.addChangeListener(changeListener);
        
        /**
         * Set icon for the simulated camera program
         */
        setIconImages(OSPiconList);                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        wholePanel = new javax.swing.JPanel();
        eboardTabbedPanel = new javax.swing.JTabbedPane();
        eBoardTabPane1 = new javax.swing.JTabbedPane();
        eBoardPanel0 = new javax.swing.JPanel();
        label_MSG0 = new javax.swing.JLabel();
        tf_VerbatimContent0 = new javax.swing.JTextField();
        label_Effect0 = new javax.swing.JLabel();
        label_Color0 = new javax.swing.JLabel();
        label_Font0 = new javax.swing.JLabel();
        combo_DisplayEffect0 = new javax.swing.JComboBox();
        combo_TextColor0 = new javax.swing.JComboBox();
        combo_TextFont0 = new javax.swing.JComboBox();
        label_ContentType0 = new javax.swing.JLabel();
        combo_ContentType0 = new javax.swing.JComboBox();
        btn_Save0 = new javax.swing.JButton();
        btn_Cancel0 = new javax.swing.JButton();
        eBoardPanel1 = new javax.swing.JPanel();
        label_MSG1 = new javax.swing.JLabel();
        tf_VerbatimContent1 = new javax.swing.JTextField();
        label_Effect1 = new javax.swing.JLabel();
        label_Color1 = new javax.swing.JLabel();
        label_Font1 = new javax.swing.JLabel();
        combo_DisplayEffect1 = new javax.swing.JComboBox();
        combo_TextColor1 = new javax.swing.JComboBox();
        combo_TextFont1 = new javax.swing.JComboBox();
        label_ContentType1 = new javax.swing.JLabel();
        combo_ContentType1 = new javax.swing.JComboBox();
        btn_Save1 = new javax.swing.JButton();
        btn_Cancel1 = new javax.swing.JButton();
        eBoardTabPane2 = new javax.swing.JTabbedPane();
        eBoardPanel2 = new javax.swing.JPanel();
        label_MSG2 = new javax.swing.JLabel();
        tf_VerbatimContent2 = new javax.swing.JTextField();
        label_Effect2 = new javax.swing.JLabel();
        label_Color2 = new javax.swing.JLabel();
        label_Font2 = new javax.swing.JLabel();
        combo_DisplayEffect2 = new javax.swing.JComboBox();
        combo_TextColor2 = new javax.swing.JComboBox();
        combo_TextFont2 = new javax.swing.JComboBox();
        label_ContentType2 = new javax.swing.JLabel();
        combo_ContentType2 = new javax.swing.JComboBox();
        btn_Save2 = new javax.swing.JButton();
        btn_Cancel2 = new javax.swing.JButton();
        eBoardPanel3 = new javax.swing.JPanel();
        label_MSG3 = new javax.swing.JLabel();
        tf_VerbatimContent3 = new javax.swing.JTextField();
        label_Effect3 = new javax.swing.JLabel();
        label_Color3 = new javax.swing.JLabel();
        label_Font3 = new javax.swing.JLabel();
        combo_DisplayEffect3 = new javax.swing.JComboBox();
        combo_TextColor3 = new javax.swing.JComboBox();
        combo_TextFont3 = new javax.swing.JComboBox();
        label_ContentType3 = new javax.swing.JLabel();
        combo_ContentType3 = new javax.swing.JComboBox();
        btn_Save3 = new javax.swing.JButton();
        btn_Cancel3 = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        btn_Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Electronic Display Settings");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formClosing(evt);
            }
        });

        wholePanel.setLayout(new java.awt.BorderLayout());

        eboardTabbedPanel.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        eboardTabbedPanel.setName("eboardTabbedPanel"); // NOI18N

        eBoardTabPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, null));
        eBoardTabPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        eBoardTabPane1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        eBoardTabPane1.setMinimumSize(new java.awt.Dimension(300, 198));
        eBoardTabPane1.setName("Default_Panel"); // NOI18N

        eBoardPanel0.setName("eBoard" + EBD_DisplayUsage.DEFAULT_TOP_ROW.getVal());
        eBoardPanel0.setLayout(new java.awt.GridBagLayout());

        label_MSG0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_MSG0.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_MSG0.setText("Message");
        label_MSG0.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel0.add(label_MSG0, gridBagConstraints);

        tf_VerbatimContent0.setColumns(23);
        tf_VerbatimContent0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        tf_VerbatimContent0.setMinimumSize(new java.awt.Dimension(250, 18));
        tf_VerbatimContent0.setName("tf_VerbatimContent" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        tf_VerbatimContent0.setPreferredSize(new java.awt.Dimension(250, 25));
        tf_VerbatimContent0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_VerbatimContent0KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel0.add(tf_VerbatimContent0, gridBagConstraints);

        label_Effect0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Effect0.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Effect0.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        eBoardPanel0.add(label_Effect0, gridBagConstraints);

        label_Color0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Color0.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Color0.setText("Color");
        label_Color0.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel0.add(label_Color0, gridBagConstraints);

        label_Font0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Font0.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Font0.setText("Font");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel0.add(label_Font0, gridBagConstraints);

        combo_DisplayEffect0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_DisplayEffect0.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect0.setName("combo_DisplayEffect" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        combo_DisplayEffect0.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_DisplayEffect0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel0.add(combo_DisplayEffect0, gridBagConstraints);

        combo_TextColor0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextColor0.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_TextColor0.setName("combo_TextColor" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        combo_TextColor0.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_TextColor0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextColor0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel0.add(combo_TextColor0, gridBagConstraints);

        combo_TextFont0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextFont0.setMinimumSize(new java.awt.Dimension(158, 21));
        combo_TextFont0.setName("combo_TextFont" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        combo_TextFont0.setPreferredSize(new java.awt.Dimension(143, 25));
        combo_TextFont0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextFont0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel0.add(combo_TextFont0, gridBagConstraints);

        label_ContentType0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_ContentType0.setText("Content Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel0.add(label_ContentType0, gridBagConstraints);

        combo_ContentType0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_ContentType0.setName("combo_ContentType" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        combo_ContentType0.setPreferredSize(new java.awt.Dimension(154, 25));
        combo_ContentType0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ContentType0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel0.add(combo_ContentType0, gridBagConstraints);

        btn_Save0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Save0.setMnemonic('s');
        btn_Save0.setText("Save");
        btn_Save0.setEnabled(false);
        btn_Save0.setInheritsPopupMenu(true);
        btn_Save0.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Save0.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Save0.setName("btn_Save" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        btn_Save0.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Save0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 170, 0, 0);
        eBoardPanel0.add(btn_Save0, gridBagConstraints);

        btn_Cancel0.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Cancel0.setMnemonic('c');
        btn_Cancel0.setText("Cancel");
        btn_Cancel0.setEnabled(false);
        btn_Cancel0.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Cancel0.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Cancel0.setName("btn_Cancel" + EBD_DisplayUsage.DEFAULT_TOP_ROW.ordinal());
        btn_Cancel0.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Cancel0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cancel0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        eBoardPanel0.add(btn_Cancel0, gridBagConstraints);

        eBoardTabPane1.addTab("TOP", eBoardPanel0);

        eBoardPanel1.setName("eBoard" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.getVal());
        eBoardPanel1.setLayout(new java.awt.GridBagLayout());

        label_MSG1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_MSG1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_MSG1.setText("Message");
        label_MSG1.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel1.add(label_MSG1, gridBagConstraints);

        tf_VerbatimContent1.setColumns(23);
        tf_VerbatimContent1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        tf_VerbatimContent1.setMinimumSize(new java.awt.Dimension(250, 18));
        tf_VerbatimContent1.setName("tf_VerbatimContent" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        tf_VerbatimContent1.setPreferredSize(new java.awt.Dimension(250, 25));
        tf_VerbatimContent1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_VerbatimContent1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel1.add(tf_VerbatimContent1, gridBagConstraints);

        label_Effect1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Effect1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Effect1.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        eBoardPanel1.add(label_Effect1, gridBagConstraints);

        label_Color1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Color1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Color1.setText("Color");
        label_Color1.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel1.add(label_Color1, gridBagConstraints);

        label_Font1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Font1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Font1.setText("Font");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel1.add(label_Font1, gridBagConstraints);

        combo_DisplayEffect1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_DisplayEffect1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "L to R Flow", "R to L Flow", "Still Frame", "Blinking" }));
        combo_DisplayEffect1.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect1.setName("combo_DisplayEffect" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        combo_DisplayEffect1.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_DisplayEffect1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel1.add(combo_DisplayEffect1, gridBagConstraints);

        combo_TextColor1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextColor1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RED", "ORANGE", "GREEN", "BLACK", "BLUE" }));
        combo_TextColor1.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_TextColor1.setName("combo_TextColor" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        combo_TextColor1.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_TextColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextColor1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel1.add(combo_TextColor1, gridBagConstraints);

        combo_TextFont1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextFont1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dialog", "DialogInput", "Microsoft_NeoGothic", "Monospaced", "Sans_Serif" }));
        combo_TextFont1.setMinimumSize(new java.awt.Dimension(158, 21));
        combo_TextFont1.setName("combo_TextFont" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        combo_TextFont1.setPreferredSize(new java.awt.Dimension(143, 25));
        combo_TextFont1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextFont1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel1.add(combo_TextFont1, gridBagConstraints);

        label_ContentType1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_ContentType1.setText("Content Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel1.add(label_ContentType1, gridBagConstraints);

        combo_ContentType1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_ContentType1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VERBATIM", "VEHICLE TAG", "REGISTRATION STAT", "GATE NAME", "CURRENT DATE", "CURRENT TIME", "CURRENT DATE TIME" }));
        combo_ContentType1.setName("combo_ContentType" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        combo_ContentType1.setPreferredSize(new java.awt.Dimension(154, 25));
        combo_ContentType1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ContentType1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel1.add(combo_ContentType1, gridBagConstraints);

        btn_Save1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Save1.setMnemonic('s');
        btn_Save1.setText("Save");
        btn_Save1.setEnabled(false);
        btn_Save1.setInheritsPopupMenu(true);
        btn_Save1.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Save1.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Save1.setName("btn_Save" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        btn_Save1.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 170, 0, 0);
        eBoardPanel1.add(btn_Save1, gridBagConstraints);

        btn_Cancel1.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Cancel1.setText("Cancel");
        btn_Cancel1.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Cancel1.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Cancel1.setName("btn_Cancel" + EBD_DisplayUsage.DEFAULT_BOTTOM_ROW.ordinal());
        btn_Cancel1.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cancel1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        eBoardPanel1.add(btn_Cancel1, gridBagConstraints);

        eBoardTabPane1.addTab("BOTTOM", eBoardPanel1);

        eboardTabbedPanel.addTab("Default", eBoardTabPane1);

        eBoardTabPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, null));
        eBoardTabPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        eBoardTabPane2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        eBoardTabPane2.setName("Vehicle_Panel"); // NOI18N

        eBoardPanel2.setName("eBoard" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.getVal());
        eBoardPanel2.setLayout(new java.awt.GridBagLayout());

        label_MSG2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_MSG2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_MSG2.setText("Message");
        label_MSG2.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel2.add(label_MSG2, gridBagConstraints);

        tf_VerbatimContent2.setColumns(23);
        tf_VerbatimContent2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        tf_VerbatimContent2.setMinimumSize(new java.awt.Dimension(250, 18));
        tf_VerbatimContent2.setName("tf_VerbatimContent" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        tf_VerbatimContent2.setPreferredSize(new java.awt.Dimension(250, 25));
        tf_VerbatimContent2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_VerbatimContent2KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel2.add(tf_VerbatimContent2, gridBagConstraints);

        label_Effect2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Effect2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Effect2.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        eBoardPanel2.add(label_Effect2, gridBagConstraints);

        label_Color2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Color2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Color2.setText("Color");
        label_Color2.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel2.add(label_Color2, gridBagConstraints);

        label_Font2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Font2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Font2.setText("Font");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel2.add(label_Font2, gridBagConstraints);

        combo_DisplayEffect2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_DisplayEffect2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "L to R Flow", "R to L Flow", "Still Frame", "Blinking" }));
        combo_DisplayEffect2.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect2.setName("combo_DisplayEffect" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        combo_DisplayEffect2.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_DisplayEffect2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel2.add(combo_DisplayEffect2, gridBagConstraints);

        combo_TextColor2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextColor2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RED", "ORANGE", "GREEN", "BLACK", "BLUE" }));
        combo_TextColor2.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_TextColor2.setName("combo_TextColor" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        combo_TextColor2.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_TextColor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextColor2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel2.add(combo_TextColor2, gridBagConstraints);

        combo_TextFont2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextFont2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dialog", "DialogInput", "Microsoft_NeoGothic", "Monospaced", "Sans_Serif" }));
        combo_TextFont2.setMinimumSize(new java.awt.Dimension(158, 21));
        combo_TextFont2.setName("combo_TextFont" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        combo_TextFont2.setPreferredSize(new java.awt.Dimension(143, 25));
        combo_TextFont2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextFont2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel2.add(combo_TextFont2, gridBagConstraints);

        label_ContentType2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_ContentType2.setText("Content Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel2.add(label_ContentType2, gridBagConstraints);

        combo_ContentType2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_ContentType2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VERBATIM", "VEHICLE TAG", "REGISTRATION STAT", "GATE NAME", "CURRENT DATE", "CURRENT TIME", "CURRENT DATE TIME" }));
        combo_ContentType2.setName("combo_ContentType" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        combo_ContentType2.setPreferredSize(new java.awt.Dimension(154, 25));
        combo_ContentType2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ContentType2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel2.add(combo_ContentType2, gridBagConstraints);

        btn_Save2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Save2.setMnemonic('s');
        btn_Save2.setText("Save");
        btn_Save2.setEnabled(false);
        btn_Save2.setInheritsPopupMenu(true);
        btn_Save2.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Save2.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Save2.setName("btn_Save" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        btn_Save2.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 170, 0, 0);
        eBoardPanel2.add(btn_Save2, gridBagConstraints);

        btn_Cancel2.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Cancel2.setText("Cancel");
        btn_Cancel2.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Cancel2.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Cancel2.setName("btn_Cancel" + EBD_DisplayUsage.CAR_ENTRY_TOP_ROW.ordinal());
        btn_Cancel2.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Cancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cancel2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        eBoardPanel2.add(btn_Cancel2, gridBagConstraints);

        eBoardTabPane2.addTab("TOP", eBoardPanel2);

        eBoardPanel3.setName("eBoard" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.getVal());
        eBoardPanel3.setLayout(new java.awt.GridBagLayout());

        label_MSG3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_MSG3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_MSG3.setText("Message");
        label_MSG3.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel3.add(label_MSG3, gridBagConstraints);

        tf_VerbatimContent3.setColumns(23);
        tf_VerbatimContent3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        tf_VerbatimContent3.setMinimumSize(new java.awt.Dimension(250, 18));
        tf_VerbatimContent3.setName("tf_VerbatimContent" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        tf_VerbatimContent3.setPreferredSize(new java.awt.Dimension(250, 25));
        tf_VerbatimContent3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_VerbatimContent3KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel3.add(tf_VerbatimContent3, gridBagConstraints);

        label_Effect3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Effect3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Effect3.setText("Effect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        eBoardPanel3.add(label_Effect3, gridBagConstraints);

        label_Color3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Color3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Color3.setText("Color");
        label_Color3.setPreferredSize(new java.awt.Dimension(76, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel3.add(label_Color3, gridBagConstraints);

        label_Font3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_Font3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_Font3.setText("Font");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel3.add(label_Font3, gridBagConstraints);

        combo_DisplayEffect3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_DisplayEffect3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "L to R Flow", "R to L Flow", "Still Frame", "Blinking" }));
        combo_DisplayEffect3.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect3.setName("combo_DisplayEffect" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        combo_DisplayEffect3.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_DisplayEffect3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_DisplayEffect3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel3.add(combo_DisplayEffect3, gridBagConstraints);

        combo_TextColor3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextColor3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RED", "ORANGE", "GREEN", "BLACK", "BLUE" }));
        combo_TextColor3.setMinimumSize(new java.awt.Dimension(100, 25));
        combo_TextColor3.setName("combo_TextColor" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        combo_TextColor3.setPreferredSize(new java.awt.Dimension(100, 25));
        combo_TextColor3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextColor3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel3.add(combo_TextColor3, gridBagConstraints);

        combo_TextFont3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_TextFont3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dialog", "DialogInput", "Microsoft_NeoGothic", "Monospaced", "Sans_Serif" }));
        combo_TextFont3.setMinimumSize(new java.awt.Dimension(158, 21));
        combo_TextFont3.setName("combo_TextFont" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        combo_TextFont3.setPreferredSize(new java.awt.Dimension(143, 25));
        combo_TextFont3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_TextFont3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        eBoardPanel3.add(combo_TextFont3, gridBagConstraints);

        label_ContentType3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        label_ContentType3.setText("Content Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        eBoardPanel3.add(label_ContentType3, gridBagConstraints);

        combo_ContentType3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        combo_ContentType3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VERBATIM", "VEHICLE TAG", "REGISTRATION STAT", "GATE NAME", "CURRENT DATE", "CURRENT TIME", "CURRENT DATE TIME" }));
        combo_ContentType3.setName("combo_ContentType" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        combo_ContentType3.setPreferredSize(new java.awt.Dimension(154, 25));
        combo_ContentType3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ContentType3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        eBoardPanel3.add(combo_ContentType3, gridBagConstraints);

        btn_Save3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Save3.setMnemonic('s');
        btn_Save3.setText("Save");
        btn_Save3.setEnabled(false);
        btn_Save3.setInheritsPopupMenu(true);
        btn_Save3.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Save3.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Save3.setName("btn_Save" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        btn_Save3.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 170, 0, 0);
        eBoardPanel3.add(btn_Save3, gridBagConstraints);

        btn_Cancel3.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Cancel3.setText("Cancel");
        btn_Cancel3.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Cancel3.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Cancel3.setName("btn_Cancel" + EBD_DisplayUsage.CAR_ENTRY_BOTTOM_ROW.ordinal());
        btn_Cancel3.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Cancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cancel3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        eBoardPanel3.add(btn_Cancel3, gridBagConstraints);

        eBoardTabPane2.addTab("BOTTOM", eBoardPanel3);

        eboardTabbedPanel.addTab("Vehicle", eBoardTabPane2);

        wholePanel.add(eboardTabbedPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        btn_Exit.setFont(new java.awt.Font(font_Type, font_Style, font_Size));
        btn_Exit.setMnemonic('c');
        btn_Exit.setText("Close");
        btn_Exit.setMaximumSize(new java.awt.Dimension(73, 35));
        btn_Exit.setMinimumSize(new java.awt.Dimension(73, 35));
        btn_Exit.setPreferredSize(new java.awt.Dimension(73, 30));
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(0, 450, 0, 0);
        buttonPanel.add(btn_Exit, gridBagConstraints);

        wholePanel.add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(wholePanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeEnabled_of_SaveCancelButtons() {
        boolean yesNo = checkPanel(currentTab);
        ((JButton) getComponentByName("btn_Save" + currentTab.ordinal())).setEnabled(yesNo);
        ((JButton) getComponentByName("btn_Cancel" + currentTab.ordinal())).setEnabled(yesNo);
        btn_Exit.setEnabled(!yesNo);
        
    }    
    
    private void changeEnabled_of_SaveCancelButtons(boolean onOff) {
        ((JButton) getComponentByName("btn_Save" + currentTab.ordinal())).setEnabled(onOff);
        ((JButton) getComponentByName("btn_Cancel" + currentTab.ordinal())).setEnabled(onOff);        
        btn_Exit.setEnabled(!onOff);
    }    
    
    private void tf_VerbatimContent0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_VerbatimContent0KeyReleased
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_tf_VerbatimContent0KeyReleased

    private void combo_DisplayEffect0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_DisplayEffect0ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_DisplayEffect0ActionPerformed

    private void combo_TextColor0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextColor0ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextColor0ActionPerformed

    private void combo_TextFont0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextFont0ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextFont0ActionPerformed

    private void combo_ContentType0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ContentType0ActionPerformed
        checkContentType();
    }//GEN-LAST:event_combo_ContentType0ActionPerformed

    private void btn_Save0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save0ActionPerformed

        showDialog(currentTab);
    }//GEN-LAST:event_btn_Save0ActionPerformed

    private void btn_Cancel0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cancel0ActionPerformed

        cancelBtnClick();
    }//GEN-LAST:event_btn_Cancel0ActionPerformed

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        parent.setEBDsettings(null);
        this.dispose();
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void btn_Cancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cancel2ActionPerformed

        cancelBtnClick();
    }//GEN-LAST:event_btn_Cancel2ActionPerformed

    private void btn_Save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save2ActionPerformed

        showDialog(currentTab);
    }//GEN-LAST:event_btn_Save2ActionPerformed

    private void combo_ContentType2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ContentType2ActionPerformed

        checkContentType();
    }//GEN-LAST:event_combo_ContentType2ActionPerformed

    private void combo_TextFont2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextFont2ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextFont2ActionPerformed

    private void combo_TextColor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextColor2ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextColor2ActionPerformed

    private void combo_DisplayEffect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_DisplayEffect2ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_DisplayEffect2ActionPerformed

    private void tf_VerbatimContent2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_VerbatimContent2KeyReleased
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_tf_VerbatimContent2KeyReleased

    private void btn_Cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cancel1ActionPerformed

        cancelBtnClick();
    }//GEN-LAST:event_btn_Cancel1ActionPerformed

    private void btn_Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save1ActionPerformed

        showDialog(currentTab);
    }//GEN-LAST:event_btn_Save1ActionPerformed

    private void combo_ContentType1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ContentType1ActionPerformed

        checkContentType();
    }//GEN-LAST:event_combo_ContentType1ActionPerformed

    private void combo_TextFont1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextFont1ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextFont1ActionPerformed

    private void combo_TextColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextColor1ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextColor1ActionPerformed

    private void combo_DisplayEffect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_DisplayEffect1ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_DisplayEffect1ActionPerformed

    private void tf_VerbatimContent1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_VerbatimContent1KeyReleased
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_tf_VerbatimContent1KeyReleased

    private void tf_VerbatimContent3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_VerbatimContent3KeyReleased
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_tf_VerbatimContent3KeyReleased

    private void combo_DisplayEffect3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_DisplayEffect3ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_DisplayEffect3ActionPerformed

    private void combo_TextColor3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextColor3ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextColor3ActionPerformed

    private void combo_TextFont3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_TextFont3ActionPerformed
        changeEnabled_of_SaveCancelButtons();
    }//GEN-LAST:event_combo_TextFont3ActionPerformed

    private void combo_ContentType3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ContentType3ActionPerformed
        checkContentType();
    }//GEN-LAST:event_combo_ContentType3ActionPerformed

    private void btn_Save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save3ActionPerformed
        showDialog(currentTab);
    }//GEN-LAST:event_btn_Save3ActionPerformed

    private void btn_Cancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cancel3ActionPerformed
        cancelBtnClick();
    }//GEN-LAST:event_btn_Cancel3ActionPerformed

    private void formClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formClosing
        parent.setEBDsettings(null);
    }//GEN-LAST:event_formClosing

     // <editor-fold defaultstate="collapsed" desc="Generated Code">  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancel0;
    private javax.swing.JButton btn_Cancel1;
    private javax.swing.JButton btn_Cancel2;
    private javax.swing.JButton btn_Cancel3;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Save0;
    private javax.swing.JButton btn_Save1;
    private javax.swing.JButton btn_Save2;
    private javax.swing.JButton btn_Save3;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JComboBox combo_ContentType0;
    private javax.swing.JComboBox combo_ContentType1;
    private javax.swing.JComboBox combo_ContentType2;
    private javax.swing.JComboBox combo_ContentType3;
    private javax.swing.JComboBox combo_DisplayEffect0;
    private javax.swing.JComboBox combo_DisplayEffect1;
    private javax.swing.JComboBox combo_DisplayEffect2;
    private javax.swing.JComboBox combo_DisplayEffect3;
    private javax.swing.JComboBox combo_TextColor0;
    private javax.swing.JComboBox combo_TextColor1;
    private javax.swing.JComboBox combo_TextColor2;
    private javax.swing.JComboBox combo_TextColor3;
    private javax.swing.JComboBox combo_TextFont0;
    private javax.swing.JComboBox combo_TextFont1;
    private javax.swing.JComboBox combo_TextFont2;
    private javax.swing.JComboBox combo_TextFont3;
    private javax.swing.JPanel eBoardPanel0;
    private javax.swing.JPanel eBoardPanel1;
    private javax.swing.JPanel eBoardPanel2;
    private javax.swing.JPanel eBoardPanel3;
    private javax.swing.JTabbedPane eBoardTabPane1;
    private javax.swing.JTabbedPane eBoardTabPane2;
    private javax.swing.JTabbedPane eboardTabbedPanel;
    private javax.swing.JLabel label_Color0;
    private javax.swing.JLabel label_Color1;
    private javax.swing.JLabel label_Color2;
    private javax.swing.JLabel label_Color3;
    private javax.swing.JLabel label_ContentType0;
    private javax.swing.JLabel label_ContentType1;
    private javax.swing.JLabel label_ContentType2;
    private javax.swing.JLabel label_ContentType3;
    private javax.swing.JLabel label_Effect0;
    private javax.swing.JLabel label_Effect1;
    private javax.swing.JLabel label_Effect2;
    private javax.swing.JLabel label_Effect3;
    private javax.swing.JLabel label_Font0;
    private javax.swing.JLabel label_Font1;
    private javax.swing.JLabel label_Font2;
    private javax.swing.JLabel label_Font3;
    private javax.swing.JLabel label_MSG0;
    private javax.swing.JLabel label_MSG1;
    private javax.swing.JLabel label_MSG2;
    private javax.swing.JLabel label_MSG3;
    private javax.swing.JTextField tf_VerbatimContent0;
    private javax.swing.JTextField tf_VerbatimContent1;
    private javax.swing.JTextField tf_VerbatimContent2;
    private javax.swing.JTextField tf_VerbatimContent3;
    private javax.swing.JPanel wholePanel;
    // End of variables declaration//GEN-END:variables
   // </editor-fold>
    
    /**
     *  decide whether or not to use the TextField to compare the contentType.
     */
    public void checkContentType(){
        if(((JComboBox) getComponentByName("combo_ContentType" + currentTab.ordinal())).getSelectedIndex() 
                == EBD_ContentType.VERBATIM.ordinal())
        {
            ((JTextField) getComponentByName("tf_VerbatimContent" + currentTab.ordinal())).setEnabled(true);
            ((JTextField) getComponentByName("tf_VerbatimContent" + currentTab.ordinal())).setText(
                ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].verbatimContent);
        }
        else
        {
            ((JTextField) getComponentByName("tf_VerbatimContent" + currentTab.ordinal())).setEnabled(false);
            ((JTextField) getComponentByName("tf_VerbatimContent" + currentTab.ordinal())).setText(null);
        }
        
        changeEnabled_of_SaveCancelButtons();       
    }
    
    /**
     * Check the error of the panel.
     * 
     * @param usage_row  Panel that is currently selected
     * @return  <b>true</b> When there is no error in the data inputted to the  <code>panel</code>, 
     * <b>false</b> otherwise
     */
    public boolean checkPanel(EBD_DisplayUsage usage_row){
        boolean result = false;
        
        byte contentType = (byte) ((JComboBox)  getComponentByName(
                "combo_ContentType"+ usage_row.ordinal())).getSelectedIndex();
        
        String verbatimContent = ((JTextField) getComponentByName(
                "tf_VerbatimContent" + usage_row.ordinal())).getText().trim();
        
        byte displayPattern = (byte) ((JComboBox)  getComponentByName(
                "combo_DisplayEffect" + usage_row.ordinal())).getSelectedIndex();

        byte textFont = (byte) ((JComboBox)  getComponentByName(
                "combo_TextFont" + usage_row.ordinal())).getSelectedIndex();
        
        
        byte textColor = (byte) ((JComboBox)  getComponentByName(
                "combo_TextColor" + usage_row.ordinal())).getSelectedIndex();

        
        if(contentType != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].contentType.ordinal())
            result = true;
        if(!verbatimContent.equals(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent))
            result = true;
        if(displayPattern != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].displayPattern.ordinal())
            result = true;
        if(textFont != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textFont.ordinal())
            result = true;
        if(textColor != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textColor.ordinal()) 
            result = true;

        return result;
    }
    
    /**
     * Enter the panel has been selected as the contents that were stored in the Database.
     * 
     * @param currentTab  Panel that is currently selected
     */
    public void cancelBtnClick(){
        ((JComboBox) getComponentByName("combo_ContentType" + currentTab.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].contentType.ordinal());
        ((JTextField) getComponentByName("tf_VerbatimContent" + currentTab.ordinal()))
                .setText(ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].verbatimContent);
        ((JComboBox) getComponentByName("combo_TextColor" + currentTab.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].textColor.ordinal());
        ((JComboBox) getComponentByName("combo_DisplayEffect" + currentTab.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].displayPattern.ordinal());
        ((JComboBox) getComponentByName("combo_TextFont" + currentTab.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[currentTab.ordinal()].textFont.ordinal());
        
        changeEnabled_of_SaveCancelButtons(false);
    }
    
    /**
     * When another panel doeeot select the property value to match the corresponding panel setting.
     * 
     * @param usage_row  Panel that is currently selected
     */
    public void selectSpecificTab(EBD_DisplayUsage usage_row){
        
        ((JComboBox) getComponentByName("combo_ContentType"+ usage_row.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].contentType.ordinal());
        
        if(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].contentType.ordinal() 
                == OSP_enums.EBD_ContentType.VERBATIM.ordinal())
            ((JTextField) getComponentByName("tf_VerbatimContent"+ usage_row.ordinal())).setEnabled(true);
        else
            ((JTextField) getComponentByName("tf_VerbatimContent"+ usage_row.ordinal())).setEnabled(false);
        
        
        ((JTextField) getComponentByName("tf_VerbatimContent"+ usage_row.ordinal()))
                .setText(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent);
        
        ((JComboBox)  getComponentByName("combo_DisplayEffect"+ usage_row.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].displayPattern.ordinal());
        
        ((JComboBox)  getComponentByName("combo_TextColor"+ usage_row.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textColor.ordinal());
        
        ((JComboBox)  getComponentByName("combo_TextFont"+ usage_row.ordinal()))
                .setSelectedIndex(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textFont.ordinal());
        
        changeEnabled_of_SaveCancelButtons(false);
    }
    
    /**
     * register the component that belong to the panel to hashmap.
     * 
     */
    private void makeComponentMap(){
        componentMap = new HashMap<String,Component>();
        for (Component outerCompo : eboardTabbedPanel.getComponents()) 
        {
            for (Component inCompo : ((JTabbedPane)outerCompo).getComponents()) 
            {
                for (Component innerCompo : ((JPanel) inCompo).getComponents()) 
                {
                    if (innerCompo instanceof JTextField) 
                    {
                        JTextField aTextField = (JTextField)innerCompo;
                        componentMap.put(aTextField.getName(), aTextField);
                    }
                    else if (innerCompo instanceof JComboBox)
                    {
                        JComboBox aComboBox = (JComboBox) innerCompo;
                        componentMap.put(aComboBox.getName(), aComboBox);
                    }
                    else if (innerCompo instanceof JButton)
                    {
                        JButton aJButton = (JButton) innerCompo;
                        componentMap.put(aJButton.getName(), aJButton);
                    }
                }
            }
        }
    }
    
    /**
     *  
     * 
     * @param name
     * @return 
     */
    public Component getComponentByName(String name) {
        if (componentMap.containsKey(name)) 
            return (Component) componentMap.get(name);
        else 
            return null;
    }  
    
    /**
     * Stored in the database.
     * 
     * @param usage_row Panel that is currently selected
     */
    public void saveDataBase(EBD_DisplayUsage usage_row){
        JComboBox comboBox = null;
        Connection conn = null;
        PreparedStatement updateSettings = null;
        
        String verbatimStr 
                = ((JTextField) getComponentByName("tf_VerbatimContent" + usage_row.ordinal())).getText().trim();
        
        comboBox = (JComboBox)getComponentByName("combo_ContentType" + usage_row.ordinal());
        
        EBD_ContentType typeItem = (EBD_ContentType)
                (((ConvComboBoxItem)comboBox.getSelectedItem()).getValue());
        
        comboBox = (JComboBox) getComponentByName("combo_DisplayEffect" + usage_row.ordinal());
        EBD_Effects patternItem = (EBD_Effects)
                (((ConvComboBoxItem)comboBox.getSelectedItem()).getValue());
        
        comboBox = (JComboBox) getComponentByName("combo_TextColor" + usage_row.ordinal());
        EBD_Colors colorItem = (EBD_Colors)
                (((ConvComboBoxItem)comboBox.getSelectedItem()).getValue());
        
        comboBox = (JComboBox) getComponentByName("combo_TextFont" + usage_row.ordinal());
        EBD_Fonts fontItem = (EBD_Fonts)
                (((ConvComboBoxItem)comboBox.getSelectedItem()).getValue());
        
        int result = 0;
        try {
            StringBuilder sb = new StringBuilder("Update eboard_settings SET ");
            sb.append("verbatim_content = ?, content_type = ?, display_pattern = ?");
            sb.append(", text_color = ?, text_font = ? WHERE usage_row = ?");

            conn = JDBCMySQL.getConnection();
            updateSettings = conn.prepareStatement(sb.toString());

            int pIndex = 1;
            updateSettings.setString(pIndex++, verbatimStr);
            updateSettings.setInt(pIndex++, typeItem.ordinal());
            updateSettings.setInt(pIndex++, patternItem.ordinal());
            updateSettings.setInt(pIndex++, colorItem.ordinal());
            updateSettings.setInt(pIndex++, fontItem.ordinal());
            updateSettings.setInt(pIndex++, usage_row.getVal());

            result = updateSettings.executeUpdate();
             
        } catch (SQLException ex) {
            Globals.logParkingException(Level.SEVERE, ex, "while saving e-board settings");  
        } finally{
            closeDBstuff(conn, updateSettings, null, "e-board settings modification");
            if (result == 1) {
                //<editor-fold desc="-- Log system settings change if set to do so">
                String currVerbatimStr = ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent;
                if (typeItem == EBD_ContentType.VERBATIM && !currVerbatimStr.equals(verbatimStr)) {
                    logParkingOperation(OpLogLevel.EBDsettingsChange,
                            "E-Board Settings Change, Verbatim Message: " + currVerbatimStr + " => " + verbatimStr);
                }
                //</editor-fold>
                ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent = verbatimStr;
                ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].contentType = typeItem;
                ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].displayPattern = patternItem;
                ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textColor = colorItem;
                ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textFont = fontItem;
                
            } else {
                JOptionPane.showMessageDialog(this, "This e-board settings update saving DB operation failed.",
                    "DB Update Operation Failure", JOptionPane.ERROR_MESSAGE);
            }
        }

        readEBoardSettings(ControlGUI.EBD_DisplaySettings);

        if (mainForm != null) { // when settings frame invoked alone, main form is null
            if (usage_row.ordinal() == DEFAULT_TOP_ROW.ordinal() 
                    || usage_row.ordinal() == DEFAULT_BOTTOM_ROW.ordinal()) 
            {
                for (byte gateNo = 1; gateNo <= gateCount; gateNo++) {
                    if (isConnected(mainForm.getDeviceManagers()[E_Board.ordinal()][gateNo].getSocket())) {
                        sendEBoardDefaultSetting(mainForm, gateNo, (byte) usage_row.ordinal());
                    }
                }
            }
        }
    }
    
    /**
     * Generating the notification window.
     * @param usage_row information on usage(normal time vs. car arrival) and E-Board row number.
     */
    public void showDialog(EBD_DisplayUsage usage_row){
        String[] message = new String[1];

        if(textFieldCheck(message, usage_row))
        {
            if (!overlapCheck(message, usage_row))
            {
                Object[] options = {"Save", "Cancel"};
                Object[] save_Options = {"Confirm"};
                int n = JOptionPane.showOptionDialog(
                            rootPane, 
                            message, 
                            "Confirmation", 
                            JOptionPane.YES_NO_OPTION, 
                            JOptionPane.QUESTION_MESSAGE, 
                            null, 
                            options, 
                            options[0]);

                if(n == JOptionPane.YES_OPTION)
                {
                    saveDataBase(usage_row);
                    JOptionPane.showOptionDialog(
                        rootPane, 
                        "Saved", 
                        "Confirm", 
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        save_Options,
                        save_Options[0]);
                    changeEnabled_of_SaveCancelButtons();
                }
                else if(n == JOptionPane.NO_OPTION) {
                    eboardTabbedPanel.setSelectedIndex(usage_row.ordinal() <= 2 ? 0 : 1);
                    if(usage_row.ordinal()%2 == 1)
                    {
                        ((JTabbedPane) eboardTabbedPanel
                                .getSelectedComponent()).setSelectedIndex(TOP_ROW);
                    }
                    else
                    {
                        ((JTabbedPane) eboardTabbedPanel
                                .getSelectedComponent()).setSelectedIndex(BOTTOM_ROW);
                    }
                }
            }
        }
        else
        {
            JOptionPane.showOptionDialog(
                    rootPane, 
                    message[0], 
                    "Error", 
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.ERROR_MESSAGE,
                    null,
                    null,
                    null);
            eboardTabbedPanel.setSelectedIndex(usage_row.ordinal() <= 2 ? 0 : 1);
            if(usage_row.ordinal()%2 == 1)
                ((JTabbedPane) eboardTabbedPanel.getSelectedComponent()).setSelectedIndex(TOP_ROW);
            else
                ((JTabbedPane) eboardTabbedPanel.getSelectedComponent()).setSelectedIndex(BOTTOM_ROW);
        }
    }
    
    /**
     * Checks if any field of E-Board settings panel changed and accumulates changed fields' contents.
     * 
     * @param errorMsg  the contents of the error             
     * @param usage_row Panel that is currently selected
     * @return  true when 
     */
    private boolean overlapCheck(String[] errorMsg, EBD_DisplayUsage usage_row){
        boolean result;
        StringBuilder wrongFields = new StringBuilder();
        
        byte contentType = (byte) ((JComboBox)  getComponentByName(
                "combo_ContentType"+ usage_row.ordinal())).getSelectedIndex();
        
        String verbatimContent = ((JTextField) getComponentByName(
                "tf_VerbatimContent" + usage_row.ordinal())).getText();
        
        byte displayPattern = (byte) ((JComboBox)  getComponentByName(
                "combo_DisplayEffect" + usage_row.ordinal())).getSelectedIndex();

        byte textFont = (byte) ((JComboBox)  getComponentByName(
                "combo_TextFont" + usage_row.ordinal())).getSelectedIndex();
        
        
        byte textColor = (byte) ((JComboBox)  getComponentByName(
                "combo_TextColor" + usage_row.ordinal())).getSelectedIndex();

        String wrongText = " Changes \n\n";
        
        if (contentType != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].contentType.ordinal()) 
        {
             wrongFields.append(" * Content Type \n"); 
             wrongFields.append("    - Current   : " 
                     + ((JComboBox)  getComponentByName("combo_ContentType" + usage_row.ordinal()))
                             .getItemAt(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()]
                                     .contentType.ordinal()) +"\n");
             wrongFields.append("    - Modified : " 
                     + ((JComboBox)  getComponentByName("combo_ContentType" + usage_row.ordinal()))
                             .getItemAt(contentType) +"\n");
             wrongFields.append("\n");
        }
        
        if(!verbatimContent.equals(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent)
                && contentType == OSP_enums.EBD_ContentType.VERBATIM.ordinal()) 
        {
             wrongFields.append(" * Message \n"); 
             wrongFields.append("    - Current   : ")
                     .append(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].verbatimContent).append("\n");
             wrongFields.append("    - Modified : ").append(verbatimContent).append("\n");
             wrongFields.append("\n");
        }

        if(displayPattern != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].displayPattern.ordinal())
        {
             wrongFields.append(" * Effect \n"); 
             wrongFields.append("    - Current   : " 
                    + ((JComboBox)  getComponentByName("combo_DisplayEffect"
                            + usage_row.ordinal())).getItemAt(
                                    ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].displayPattern.ordinal()) +"\n");
             wrongFields.append("    - Modified : " 
                    + ((JComboBox)  getComponentByName("combo_DisplayEffect" + usage_row.ordinal()))
                            .getItemAt(displayPattern) +"\n");
            wrongFields.append("\n");
        }

        if(textFont != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textFont.ordinal())
        {
             wrongFields.append(" * Font \n"); 
             wrongFields.append("    - Current   : " 
                    + ((JComboBox)  getComponentByName("combo_TextFont" + usage_row.ordinal()))
                            .getItemAt(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textFont.ordinal()) +"\n");
             wrongFields.append("    - Modified : " 
                    + ((JComboBox)  getComponentByName("combo_TextFont" + usage_row.ordinal()))
                            .getItemAt(textFont) +"\n");
            wrongFields.append("\n");
        }

        if(textColor != ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textColor.ordinal())
        {
             wrongFields.append(" * Color \n"); 
             wrongFields.append("    - Current   : " 
                    + ((JComboBox)  getComponentByName("combo_TextColor" + usage_row.ordinal()))
                            .getItemAt(ControlGUI.EBD_DisplaySettings[usage_row.ordinal()].textColor.ordinal()) +"\n");
             wrongFields.append("    - Modified : " 
                    + ((JComboBox)  getComponentByName("combo_TextColor" + usage_row.ordinal()))
                            .getItemAt(textColor) +"\n");
            wrongFields.append("\n");
        }
        
        if (wrongFields.length() == 0)
        {
            result = true;
        } 
        else 
        {
            result = false;
            wrongFields = wrongFields.insert(0, wrongText);
        }
        errorMsg[0] = wrongFields.toString();
        return result;
    }
    
    /**
     * verbatimContent input checking.
     * @param errorMsg      the contents of the error
     * @param usage_row     Panel that is currently selected
     * @return  errorMsg
     */
    private boolean textFieldCheck(String[] errorMsg, EBD_DisplayUsage usage_row){
        boolean result = false;
        
        
        StringBuilder wrongFields = new StringBuilder();
        
        if(((JComboBox) getComponentByName("combo_ContentType" + usage_row.ordinal()))
                .getSelectedIndex() == OSP_enums.EBD_ContentType.VERBATIM.ordinal()){
            String message = ((JTextField) getComponentByName(
                    "tf_VerbatimContent" +  usage_row.ordinal())).getText().trim();
            if (message.length() <= 0)
            {
                wrongFields.append("  - Please enter a message\n");
                ((JTextField) getComponentByName(
                    "tf_VerbatimContent" +  usage_row.ordinal())).requestFocus();;
            }
        }
        
        if (wrongFields.length() == 0) 
        {
            result = true;
        } 
        else 
        {
            result = false;
        }
        errorMsg[0] = wrongFields.toString();
        return result;
    }    

    private void addContentTypeItems() {
        for (EBD_DisplayUsage usage_row : EBD_DisplayUsage.values()) {
            JComboBox comboBox = ((JComboBox) getComponentByName(
                    "combo_ContentType"+ usage_row.ordinal()));
            
            comboBox.removeAllItems();
            for (EBD_ContentType aType : EBD_ContentType.values()) {
                
                //<editor-fold desc="-- determine label for each item value">
                String label;
                
                switch (aType) {
                    case CURRENT_DATE: 
                        label = "Current Date";
                        break;
                        
                    case CURRENT_TIME: 
                        label = "Current Time";
                        break;
                        
                    case CURRENT_DATE_TIME:
                        label = "Current Date and Time";
                        break;
                        
                    case GATE_NAME: 
                        label = "Gate Name";
                        break;
                        
                    case REGISTRATION_STAT: 
                        label = "Registration Status"; // Vehicle Registration Status 
                        break;
                        
                    case VEHICLE_TAG: // Vehicle Plate Number
                        label = "Plate Number";
                        break;
                        
                    case VERBATIM: // display in the exact words
                        label = "Exact Words"; 
                        break;
                        
                    default:
                        label = "";
                        break;
                }
                //</editor-fold>
                
                comboBox.addItem(new ConvComboBoxItem(aType, label));
            }
        }
    }

    private void addTextColorItems() {
        for (EBD_DisplayUsage usage_row : EBD_DisplayUsage.values()) {
            JComboBox comboBox = ((JComboBox) getComponentByName(
                    "combo_TextColor"+ usage_row.ordinal()));
            
            comboBox.removeAllItems();
            for (EBD_Colors aColor : EBD_Colors.values()) {                                
                comboBox.addItem(new ConvComboBoxItem(aColor, aColor.name()));
            }
        }
    }

    private void addDisplayEffectItems() {
        for (EBD_DisplayUsage usage_row : EBD_DisplayUsage.values()) {
            JComboBox comboBox = ((JComboBox) getComponentByName(
                    "combo_DisplayEffect"+ usage_row.ordinal()));
            
            comboBox.removeAllItems();
            for (EBD_Effects anEffect : EBD_Effects.values()) {

                //<editor-fold desc="-- determine label for each item value">
                String label;
                
                switch (anEffect) {
                    case BLINKING:
                        label = "Blinking";
                        break;
                        
                    case LTOR_FLOW:
                        label = "L to R Flow";
                        break;
                        
                    case RTOL_FLOW:
                        label = "R to L Flow";
                        break;
                        
                    case STILL_FRAME:
                        label = "Still Frame";
                        break;
                        
                    default:
                        label = "";
                        break;
                }
                //</editor-fold>
                            
                comboBox.addItem(new ConvComboBoxItem(anEffect, label));
            }
        }
    }

    private void addTextFontItems() {
        for (EBD_DisplayUsage usage_row : EBD_DisplayUsage.values()) {
            JComboBox comboBox = ((JComboBox) getComponentByName(
                    "combo_TextFont"+ usage_row.ordinal()));
            
            comboBox.removeAllItems();
            for (EBD_Fonts aFont : EBD_Fonts.values()) {
                
                //<editor-fold desc="-- determine label for each item value">
                String label = "";
                
                switch (aFont) {
                    case Dialog:
                        label = "Dialog";
                        break;
                        
                    case DialogInput:
                        label = "Dialog Input";
                        break;
                        
                    case Microsoft_NeoGothic:
                        label = "Microsoft Neo Gothic";
                        break;
                        
                    case Monospaced:
                        label = "Monospaced";
                        break;
                        
                    case Sans_Serif:
                        label = "Sans Serif";
                        break;
                        
                    default:
                        label = "";
                        break;
                }
                //</editor-fold>                
                comboBox.addItem(new ConvComboBoxItem(aFont, label));
            }
        }
    }
}
