/* 
 * Copyright (C) 2015 Open Source Parking Inc.(www.osparking.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.osparking.global.names;

import com.osparking.global.Globals;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import static com.osparking.global.names.DB_Access.readSettings;
import static com.osparking.global.Globals.checkOptions;
import static com.osparking.global.Globals.OSPiconList;
import static com.osparking.global.Globals.initializeLoggers;

/**
 *
 * @author Open Source Parking Inc.
 */
public class ImageDisplay extends javax.swing.JFrame {

    /**
     * Creates new form ImageDisplay
     */
    
    public ImageDisplay(BufferedImage vehicleImg, String title) {
        initComponents();
        setIconImages(OSPiconList);
        setTitle(title);
        
        ImageLabel.setIcon(new ImageIcon(vehicleImg));
        ImageLabel.setSize(new Dimension(ImageLabel.getIcon().getIconWidth(), ImageLabel.getIcon().getIconHeight()));
        setSize(ImageLabel.getSize().width +  30, ImageLabel.getSize().height + 50);        
    }    
    
    public ImageDisplay(String filename, String title) {
        initComponents();
        setIconImages(OSPiconList);
        setTitle(title);
        
        ImageLabel.setIcon(new ImageIcon(new Globals().getClass().getResource(filename)));
        ImageLabel.setSize(new Dimension(ImageLabel.getIcon().getIconWidth(), ImageLabel.getIcon().getIconHeight()));
        setSize(ImageLabel.getSize().width +  30, ImageLabel.getSize().height + 50);        
    }

    public void SetLabel_Image(String imagePath) {
        ImageLabel.setIcon(new ImageIcon(imagePath));
        ImageLabel.setSize(new Dimension(ImageLabel.getIcon().getIconWidth(), ImageLabel.getIcon().getIconHeight()));
        setSize(ImageLabel.getSize().width +  30, ImageLabel.getSize().height + 50);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        RealSizeImg = new javax.swing.JPanel();
        ImageLabel = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        RealSizeImg.setOpaque(false);
        RealSizeImg.setPreferredSize(new java.awt.Dimension(0, 0));
        RealSizeImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RealSizeImgMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout RealSizeImgLayout = new javax.swing.GroupLayout(RealSizeImg);
        RealSizeImg.setLayout(RealSizeImgLayout);
        RealSizeImgLayout.setHorizontalGroup(
            RealSizeImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        RealSizeImgLayout.setVerticalGroup(
            RealSizeImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(RealSizeImg, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(ImageLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RealSizeImgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RealSizeImgMouseClicked
        this.dispose();
    }//GEN-LAST:event_RealSizeImgMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        initializeLoggers();
        checkOptions(args);
        readSettings();        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            BufferedImage path = null;
            public void run() {
                new ImageDisplay(path, "Test Run").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JPanel RealSizeImg;
    // End of variables declaration//GEN-END:variables
}
